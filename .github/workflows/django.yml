name: Django Tests

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]
    env:
      DJANGO_SETTINGS_MODULE: price_scraper_rencanakan_api.settings
      SECRET_KEY: ${{ secrets.SECRET_KEY || 'insecure-test-key' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install MySQL dev libs
        run: |
          sudo apt-get update
          sudo apt-get install -y libmysqlclient-dev pkg-config

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Apply database migrations
        run: |
          python manage.py makemigrations dashboard --noinput
          python manage.py makemigrations db_pricing --noinput
          python manage.py makemigrations security --noinput
          python manage.py migrate --noinput

      - name: Run Django tests with coverage
        run: |
          coverage run --source='.' manage.py test --verbosity 2
          coverage xml -o coverage-django.xml
          coverage report --show-missing
          
      - name: Run all pytest tests with coverage
        run: |
          python -m pytest \
            --cov=api.gemilang \
            --cov=api.mitra10 \
            --cov=api.depobangunan \
            --cov=api.juragan_material \
            --cov=api \
            --cov-report=term-missing \
            --cov-report=xml:coverage-pytest.xml \
            -v \
            api/gemilang/tests/ \
            api/mitra10/tests/ \
            api/depobangunan/tests/ \
            api/juragan_material/tests/ \
            api/test_*.py
          
      - name: Run module-specific coverage checks
        run: |
          echo "Running Gemilang module tests..."
          python -m pytest --cov=api.gemilang.unit_parser --cov=api.gemilang.html_parser --cov-report=term-missing api/gemilang/tests/ -v
          
          echo "Running Mitra10 module tests..."
          python -m pytest --cov=api.mitra10 --cov-report=term-missing api/mitra10/tests/ -v
          
          echo "Running Depobangunan module tests..."
          python -m pytest --cov=api.depobangunan --cov-report=term-missing api/depobangunan/tests/ -v
          
          echo "Running Juragan Material module tests..."
          python -m pytest --cov=api.juragan_material --cov-report=term-missing api/juragan_material/tests/ -v
          
      - name: Upload coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage-django.xml
            coverage-pytest.xml
            .coverage
            
      - name: Coverage Summary
        run: |
          echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "### Django Tests Coverage" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          coverage report --show-missing >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Pytest Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          python -m pytest \
            --cov=api.gemilang \
            --cov=api.mitra10 \
            --cov=api.depobangunan \
            --cov=api.juragan_material \
            --cov-report=term \
            api/gemilang/tests/ \
            api/mitra10/tests/ \
            api/depobangunan/tests/ \
            api/juragan_material/tests/ \
            --tb=no -q >> $GITHUB_STEP_SUMMARY || true
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY